name: publish

on:
  issues:
    types:
      - labeled

jobs:
  get-all-comments:
    if: contains(github.event.issue.labels.*.name, 'publish')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v5
        id: add-docs-from-comments
        with:
          script: |
            const issue = await github.rest.issues.get({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const text = [issue.data.body].concat(comments.data.map(d=>d.body));
            const docs = {
              title: issue.data.title,
              text: text.join('\n\n')
            };
            
            const base64 = Buffer.from(docs.text).toString('base64');
            
            const user = await github.rest.users.getByUsername({
              username: context.repo.owner
            });

            let createOrUpdateFileContentsRequestParams;
            
            try{
              const content = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: `${docs.title}.md`
              });
              console.log(content.data);
              createOrUpdateFileContentsRequestParams = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: `${docs.title}.md`,
                message: `Add ${docs.title}.md`,
                content: base64,
                sha: content.data.sha,
                committer: {
                  name: context.repo.owner,
                  email: user.data.email
                },
                author:{
                  name: context.repo.owner,
                  email: user.data.email
                }
              };
            } catch (e) {
              console.log(e);
              createOrUpdateFileContentsRequestParams = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: `${docs.title}.md`,
                message: `Add ${docs.title}.md`,
                content: base64,
                committer: {
                  name: context.repo.owner,
                  email: user.data.email
                },
                author:{
                  name: context.repo.owner,
                  email: user.data.email
                }
              };
            }
            
            const result = await github.rest.repos.createOrUpdateFileContents(createOrUpdateFileContentsRequestParams);
            return result;

      - name: print issue
        run: echo '${{ toJSON(steps.get-comments.outputs.result) }}'
